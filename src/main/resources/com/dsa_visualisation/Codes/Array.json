{
  "java": "public class Array {\n    private int[] arr; // Array to hold the elements\n    private int size; // Current number of elements in the array\n    private int capacity; // Maximum capacity of the array\n\n    // Constructor to initialize the array with a given capacity\n    public Array(int capacity) {\n        this.capacity = capacity;\n        arr = new int[capacity];\n        size = 0;\n    }\n\n    // Method to add an element to the array\n    public void add(int element) {\n        if (size == capacity) {\n            System.out.println(\"Array is full\");\n            return;\n        }\n        arr[size] = element;\n        size++;\n    }\n\n    // Method to get an element at a specific index\n    public int get(int index) {\n        if (index >= size || index < 0) {\n            throw new IndexOutOfBoundsException(\"Index out of bounds\");\n        }\n        return arr[index];\n    }\n\n    // Method to remove an element at a specific index\n    public void remove(int index) {\n        if (index >= size || index < 0) {\n            throw new IndexOutOfBoundsException(\"Index out of bounds\");\n        }\n        for (int i = index; i < size - 1; i++) {\n            arr[i] = arr[i + 1];\n        }\n        size--;\n    }\n\n    // Method to print all elements in the array\n    public void print() {\n        for (int i = 0; i < size; i++) {\n            System.out.print(arr[i] + \" \");\n        }\n        System.out.println();\n    }\n\n    public static void main(String[] args) {\n        Array array = new Array(5);\n        array.add(10);\n        array.add(20);\n        array.add(30);\n        array.print(); // Output: 10 20 30\n        array.remove(1);\n        array.print(); // Output: 10 30\n        System.out.println(array.get(1)); // Output: 30\n    }\n}\n",
  "cpp": "#include <iostream>\nusing namespace std;\n\nclass Array {\nprivate:\n    int* arr; // Pointer to the array\n    int size; // Current number of elements in the array\n    int capacity; // Maximum capacity of the array\n\npublic:\n    // Constructor to initialize the array with a given capacity\n    Array(int capacity) {\n        this->capacity = capacity;\n        arr = new int[capacity];\n        size = 0;\n    }\n\n    // Method to add an element to the array\n    void add(int element) {\n        if (size == capacity) {\n            cout << \"Array is full\" << endl;\n            return;\n        }\n        arr[size] = element;\n        size++;\n    }\n\n    // Method to get an element at a specific index\n    int get(int index) {\n        if (index >= size || index < 0) {\n            throw out_of_range(\"Index out of bounds\");\n        }\n        return arr[index];\n    }\n\n    // Method to remove an element at a specific index\n    void remove(int index) {\n        if (index >= size || index < 0) {\n            throw out_of_range(\"Index out of bounds\");\n        }\n        for (int i = index; i < size - 1; i++) {\n            arr[i] = arr[i + 1];\n        }\n        size--;\n    }\n\n    // Method to print all elements in the array\n    void print() {\n        for (int i = 0; i < size; i++) {\n            cout << arr[i] << \" \";\n        }\n        cout << endl;\n    }\n\n    // Destructor to clean up memory\n    ~Array() {\n        delete[] arr;\n    }\n};\n\nint main() {\n    Array array(5);\n    array.add(10);\n    array.add(20);\n    array.add(30);\n    array.print(); // Output: 10 20 30\n    array.remove(1);\n    array.print(); // Output: 10 30\n    cout << array.get(1) << endl; // Output: 30\n    return 0;\n}\n",
  "javascript": "class Array {\n    constructor(capacity) {\n        this.capacity = capacity; // Maximum capacity of the array\n        this.arr = new Array(capacity); // Array to hold the elements\n        this.size = 0; // Current number of elements in the array\n    }\n\n    // Method to add an element to the array\n    add(element) {\n        if (this.size === this.capacity) {\n            console.log('Array is full');\n            return;\n        }\n        this.arr[this.size] = element;\n        this.size++;\n    }\n\n    // Method to get an element at a specific index\n    get(index) {\n        if (index >= this.size || index < 0) {\n            throw new Error('Index out of bounds');\n        }\n        return this.arr[index];\n    }\n\n    // Method to remove an element at a specific index\n    remove(index) {\n        if (index >= this.size || index < 0) {\n            throw new Error('Index out of bounds');\n        }\n        for (let i = index; i < this.size - 1; i++) {\n            this.arr[i] = this.arr[i + 1];\n        }\n        this.size--;\n    }\n\n    // Method to print all elements in the array\n    print() {\n        for (let i = 0; i < this.size; i++) {\n            process.stdout.write(this.arr[i] + ' ');\n        }\n        console.log();\n    }\n}\n\n// Example usage\nconst array = new Array(5);\narray.add(10);\narray.add(20);\narray.add(30);\narray.print(); // Output: 10 20 30\narray.remove(1);\narray.print(); // Output: 10 30\nconsole.log(array.get(1)); // Output: 30\n"
}
